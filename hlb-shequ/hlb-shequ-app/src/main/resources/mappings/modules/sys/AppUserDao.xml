<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haolinbang.modules.sys.dao.AppUserDao">
    
	<sql id="appUserColumns">
		a.id AS "id",
		a.name AS "name",
		a.login_name AS "loginName",
		a.staff_id AS "staffId",
		a.group_id AS "groupId",
		a.source AS "source",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="appUserJoins">
	</sql>
    
	<select id="get" resultType="AppUser">
		SELECT 
			<include refid="appUserColumns"/>
		FROM app_user a
		<include refid="appUserJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="AppUser">
		SELECT 
			<include refid="appUserColumns"/>
		FROM app_user a
		<include refid="appUserJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="AppUser">
		SELECT 
			<include refid="appUserColumns"/>
		FROM app_user a
		<include refid="appUserJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO app_user(
			id,
			name,
			login_name,
			staff_id,
			group_id,
			source,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{name},
			#{loginName},
			#{staffId},
			#{groupId},
			#{source},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE app_user SET 	
			name = #{name},
			login_name = #{loginName},
			staff_id = #{staffId},
			group_id = #{groupId},
			source = #{source},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE app_user SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<select id="getAppUserByLoginName" resultType="AppUser">
		SELECT 
			<include refid="appUserColumns"/>
		FROM app_user a
		<include refid="appUserJoins"/>
		WHERE a.login_name = #{loginName}
	</select>
	
	
	<!-- 更新登录信息，如登录IP、登录时间 -->
	<update id="updateLoginInfo">
		UPDATE app_user SET
		login_ip = #{loginIp},
		login_Date = #{loginDate}
		WHERE id = #{id}
	</update>
	
	
	<select id="getAppUserByStaffId" resultType="AppUser">
		SELECT 
			<include refid="appUserColumns"/>
		FROM app_user a
		<include refid="appUserJoins"/>
		WHERE a.source = #{source}
		AND a.staff_id = #{staffId}
	</select>	
	
	<select id="checkIsAuth" resultType="java.lang.Boolean">
		SELECT
			(
				SELECT
					count(1) cnt1
				FROM
					app_user_role ur
				WHERE
					ur.user_id = #{id}
			) + (
				SELECT
					count(1) cnt2
				FROM
					app_user_permission up
				WHERE
					up.user_id = #{id}
			) total
		FROM
			DUAL
	</select>
</mapper>