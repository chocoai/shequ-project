<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haolinbang.modules.sns.dao.WyActCandidateDao">

	<sql id="wyActCandidateColumns">
		a.id AS "id",
		a.candidate AS
		"candidate",
		a.candidate_type AS "candidateType",
		a.create_by AS
		"createBy.id",
		a.create_date AS "createDate",
		a.update_by AS
		"updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.proc_def_id AS "procDefId",
		a.task_id AS "taskId",
		a.type AS "type",
		a.same_task_id AS "sameTaskId",
		a.specify_task_id AS "specifyTaskId",
		a.source AS "source",
		a.allow_delegate_task AS "allowDelegateTask",
		a.allow_back AS "allowBack"
	</sql>

	<sql id="wyActCandidateJoins">
	</sql>

	<select id="get" resultType="WyActCandidate">
		SELECT
		<include refid="wyActCandidateColumns" />
		FROM wy_act_candidate a
		<include refid="wyActCandidateJoins" />
		WHERE a.id = #{id}
	</select>

	<select id="findList" resultType="WyActCandidate">
		SELECT
		<include refid="wyActCandidateColumns" />
		FROM wy_act_candidate a
		<include refid="wyActCandidateJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<select id="findAllList" resultType="WyActCandidate">
		SELECT
		<include refid="wyActCandidateColumns" />
		FROM wy_act_candidate a
		<include refid="wyActCandidateJoins" />
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>

	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO wy_act_candidate(
		candidate,
		candidate_type,
		create_by,
		create_date,
		update_by,
		update_date,
		remarks,
		del_flag,
		proc_def_id,
		task_id,
		type,
		same_task_id,
		specify_task_id,
		source,
		allow_delegate_task,
		allow_back
		) VALUES (
		#{candidate},
		#{candidateType},
		#{createBy.id},
		#{createDate},
		#{updateBy.id},
		#{updateDate},
		#{remarks},
		#{delFlag},
		#{procDefId},
		#{taskId},
		#{type},
		#{sameTaskId},
		#{specifyTaskId},
		#{source},
		#{allowDelegateTask},
		#{allowBack}
		)
	</insert>

	<update id="update">
		UPDATE wy_act_candidate SET
		candidate = #{candidate},
		candidate_type = #{candidateType},
		update_by = #{updateBy.id},
		update_date = #{updateDate},
		remarks = #{remarks},
		proc_def_id = #{procDefId},
		task_id = #{taskId},
		type = #{type},
		same_task_id = #{sameTaskId},
		specify_task_id = #{specifyTaskId},
		source = #{source},
		allow_delegate_task = #{allowDelegateTask},
		allow_back = #{allowBack}
		WHERE id = #{id}		
	</update>

	<update id="delete">
		UPDATE wy_act_candidate SET
		del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>

	<select id="getWyActCandidateByProcDefIdAndTaskIdAndCandidate" resultType="WyActCandidate">
		SELECT
		<include refid="wyActCandidateColumns" />
		FROM wy_act_candidate a
		<include refid="wyActCandidateJoins" />
		WHERE a.proc_def_id = #{procDefId}
		AND a.task_id = #{taskId}
		AND a.candidate = #{candidate}
	</select>
	
	
	<select id="getWyActCandidateByProcDefIdAndTaskIdAndType" resultType="WyActCandidate">
		SELECT
		<include refid="wyActCandidateColumns" />
		FROM wy_act_candidate a
		<include refid="wyActCandidateJoins" />
		WHERE a.proc_def_id = #{procDefId}
		AND a.task_id = #{taskId}
		AND a.type = #{type}
	</select>
	
	
	<select id="getWyActCandidateByProcDefIdAndTaskId" resultType="WyActCandidate">
		SELECT
		<include refid="wyActCandidateColumns" />
		FROM wy_act_candidate a
		<include refid="wyActCandidateJoins" />
		WHERE a.proc_def_id = #{procDefId}
		AND a.task_id = #{taskId}
	</select>
	
	<select id="getWyActCandidateByPidAndTaskidAndType" resultType="WyActCandidate">
		SELECT
		<include refid="wyActCandidateColumns" />
		FROM wy_act_candidate a
		<include refid="wyActCandidateJoins" />
		WHERE a.proc_def_id = #{procDefId}
		AND a.task_id = #{taskId}
		AND a.type = #{type}
		AND a.source is null
	</select>
	
	<select id="getWyActCandidateByPidAndTaskidAndTypeAndSource" resultType="WyActCandidate">
		SELECT
		<include refid="wyActCandidateColumns" />
		FROM wy_act_candidate a
		<include refid="wyActCandidateJoins" />
		WHERE a.proc_def_id = #{procDefId}
		AND a.task_id = #{taskId}
		AND a.type = #{type}
		AND a.source = #{source}
	</select>
	
	<select id="getWyActCandidateByPidAndTaskidAndSource" resultType="WyActCandidate">
		SELECT
		<include refid="wyActCandidateColumns" />
		FROM wy_act_candidate a
		<include refid="wyActCandidateJoins" />
		WHERE a.proc_def_id = #{procDefId}
		AND a.task_id = #{taskId}
		AND a.source = #{source}
	</select>
	
	<select id="getWyActCandidateSByPidAndTaskidAndSource" resultType="WyActCandidate">
		SELECT
		<include refid="wyActCandidateColumns" />
		FROM wy_act_candidate a
		<include refid="wyActCandidateJoins" />
		WHERE a.proc_def_id = #{procDefId}
		AND a.task_id = #{taskId}
		AND a.source = #{source}
	</select>
	
	<select id="getWyActCandidateByPidAndTaskidAndTypeAndSourceAndCandidate" resultType="WyActCandidate">
		SELECT
		<include refid="wyActCandidateColumns" />
		FROM wy_act_candidate a
		<include refid="wyActCandidateJoins" />
		WHERE a.proc_def_id = #{procDefId}
		AND a.task_id = #{taskId}
		AND a.source = #{source}
		AND a.candidate = #{candidate}
	</select>

</mapper>